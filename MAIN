import random


board = ['#',' ',' ',' ',' ',' ',' ',' ',' ',' ']
ref_board = ['#','1','2','3','4','5','6','7','8','9']

#Display the board
def display_board(board):

    print(board[7] + '|' + board[8] + '|' + board[9])
    print(board[4] + '|' + board[5] + '|' + board[6])
    print(board[1] + '|' + board[2] + '|' + board[3])

#Want to replay the game??
def replay():
    choice1 = input("Play again? Enter Y or N").upper()
    return choice1 == 'Y'


#Taking player input
def player_input(t):
    marker = ''
    if t == 'player1':
        while not (marker == 'X' or marker == 'O'):
            marker = input(f"{t}: Do you want to be X or O?").upper()
            if marker == 'X':
                return ('X','O')
            else:
                return ('O', 'X')

    else:
        while not (marker == 'X' or marker == 'O'):
            marker = input(f"{t}: Do you want to be X or O?").upper()
            if marker == 'X':
                return ('O','X')
            else:
                return ('X', 'O')



#Defining Turn for player1 and player2
def choose_first():
    if random.randint(0,1) == 0:

        return 'player1'
    else:

        return 'player2'


# player Choose between 1 to 9 position
def player_choice(board):
    position = 0
    while position not in [1,2,3,4,5,6,7,8,9] or not space_check(board,position):
        position = int(input("Choose a position (1-9):\n"))
    return position

#Check if the Space is available
def space_check(board, position):
    return board[position] == ' '



#mark the place with X or O
def place_marker(board,marker,position):
    board[position] = marker


#Combinations for a Win!
def win_check(board, mark):
    return ((board[7] == mark and board[8] == mark and board[9] == mark) or
            (board[4]== mark and board[5]== mark and board[6]== mark) or
            (board[1] == mark and board[2]== mark and board[3]== marK) or
            (board[1]== mark and board[5]== mark and board[9]== mark) or
            (board[7]== mark and board[5]== mark and board[3]== mark) or
            (board[1]== mark and board[4]== mark and board[7]== mark) or
            (board[2]== mark and board[5]== mark and board[8]== mark) or
            (board[9]== mark and board[6]== mark and board[3]== mark))



#Full board check or checking a Draw
def full_board_check(board):
    for i in range(1,10):
        if space_check(board,i):
            return False
    #board is full: return True
    return True





#Running the Main Game
while True:

    display_board(ref_board)
    display_board(board)
    turn = choose_first()
    print(turn + " will go first!")
    player1_marker, player2_marker = player_input(turn)
    game_on = True
    while game_on:
        if turn == 'player1':
            print("\n"*10)
            display_board(ref_board)
            display_board(board)
            position = player_choice(board)
            place_marker(board,player1_marker,position)

            if win_check(board,player1_marker):
                display_board(board)
                print("Player 1 has won!!")
                game_on = False
            else:
                if full_board_check(board):
                    display_board(board)
                    print("It's a draw!!")
                    break
                else:
                    turn = 'player2'





        elif turn == 'player2':
            print("\n" * 10)
            display_board(ref_board)
            display_board(board)
            position = player_choice(board)
            place_marker(board, player2_marker, position)

            if win_check(board, player2_marker):
                display_board(board)
                print("Player 2 has won!!")
                game_on = False
            else:
                if full_board_check(board):
                    display_board(board)
                    print("It's a draw!!")
                    break
                else:
                    turn = 'player1'



    if not replay():
        break
